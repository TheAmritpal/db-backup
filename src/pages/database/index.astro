---
const user = Astro.locals.user;
if (!user) {
  return Astro.redirect("/auth/sign-in");
}
import { EBackup } from "@/db/utils/EBackup.enum";
import AdminLayout from "@/layouts/AdminLayout.astro";
import { treaty } from "@elysiajs/eden";
import type { App } from "@/server/elysia";
const app = treaty<App>("localhost:4321");
const databases = await app.api.database.index.get();
---

<script>
  import type { App } from "@/server/elysia";
  import { EBackup } from "@/db/utils/EBackup.enum";
  import { treaty } from "@elysiajs/eden";
  import Swal from "sweetalert2";
  const app = treaty<App>(window.location.host);
  const backupSelect = document.querySelectorAll<HTMLInputElement>(".backup-select");
  backupSelect.forEach((select: HTMLInputElement) => {
    select.addEventListener("change", async (event: Event) => {
      if (event.target) {
        try {
          const id = (event.target as HTMLInputElement).getAttribute("data-id");
          if (!id) return;
          const backup: EBackup = (event.target as HTMLInputElement).value as EBackup;
          const { data, error } = await app.api.database["change-backup"].post({
            id: +id,
            backup
          });
          if (error) throw error;
          if (!data.success) {
            Swal.fire({
              position: "center",
              icon: "error",
              title: data.message[0],
              showConfirmButton: false,
              timer: 2000,
              showCloseButton: true,
            });
          }
        } catch (error) {
          const customError = error as {
            status: number;
            value:
              | {
                  success: boolean;
                  message: string[];
                }
              | string;
          };
          const errorMessage =
            typeof customError.value === "string"
              ? customError.value
              : customError.value.message[0];
          Swal.fire({
            position: "center",
            icon: "error",
            title: errorMessage,
            showConfirmButton: false,
            timer: 2000,
            showCloseButton: true,
          });
        }
      }
    });
  });

  const deleteDatabase = document.querySelectorAll<HTMLElement>(".remove-item-btn");
  deleteDatabase.forEach((database: HTMLElement) => {
    database.addEventListener("click", async function (event: Event) {
      try {
        if (event.target) {
          const id = (event.target as HTMLInputElement).getAttribute("data-id");
          if (!id) return;
          const { data, error } = await app.api.database.delete.post({ id: +id });
          if (error) throw error;
          if (data.success) {
            Swal.fire({
              position: "center",
              icon: "success",
              title: data.message[0],
              showConfirmButton: false,
              timer: 2000,
              showCloseButton: true,
            });
            setTimeout(() => {
              window.location.reload();
            }, 2000);
          }
        }
      } catch (error) {
        const customError = error as {
          status: number;
          value:
            | {
                success: boolean;
                message: string[];
              }
            | string;
        };
        const errorMessage =
          typeof customError.value === "string"
            ? customError.value
            : customError.value.message[0];
        Swal.fire({
          position: "center",
          icon: "error",
          title: errorMessage,
          showConfirmButton: false,
          timer: 2000,
          showCloseButton: true,
        });
      }
    });
  });
</script>
<AdminLayout>
  <div class="container-fluid">
    <!-- start page title -->
    <div class="row">
      <div class="col-12">
        <div
          class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent"
        >
          <h4 class="mb-sm-0">Database</h4>

          <div class="page-title-right">
            <ol class="breadcrumb m-0">
              <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
              <li class="breadcrumb-item active">Database</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
    <!-- end page title -->

    <div class="row">
      <div class="col-lg-12">
        <div class="card">
          <div class="card-header d-flex align-items-center">
            <h5 class="card-title mb-0 flex-grow-1">Database List</h5>
            <div>
              <button
                onclick="window.location.href = '/database/add'"
                class="btn btn-primary btn-sm">Add New Database</button
              >
            </div>
          </div>
          <div class="card-body">
            <table
              id="example"
              class="table table-bordered dt-responsive nowrap table-striped align-middle"
              style="width:100%"
            >
              <thead>
                <tr>
                  <th data-ordering="false">#</th>
                  <th data-ordering="false">Database</th>
                  <th data-ordering="false">Host</th>
                  <th data-ordering="false">User</th>
                  <th data-ordering="false">Backup</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                {
                  databases &&
                    databases.data &&
                    databases.data.map((database, index) => (
                      <tr>
                        <td>{index + 1}</td>
                        <td>{database.database}</td>
                        <td>{database.host}</td>
                        <td>{database.user}</td>
                        <td>
                          <select
                            class="form-control backup-select"
                            data-id={database.id}
                          >
                            <option
                              value={EBackup.DAILY}
                              selected={database.backup === EBackup.DAILY}
                            >
                              Daily
                            </option>
                            <option
                              value={EBackup.WEEKLY}
                              selected={database.backup === EBackup.WEEKLY}
                            >
                              Weekly
                            </option>
                          </select>
                        </td>
                        <td>
                          <div class="dropdown d-inline-block">
                            <button
                              class="btn btn-soft-secondary btn-sm dropdown"
                              type="button"
                              data-bs-toggle="dropdown"
                              aria-expanded="false"
                            >
                              <i class="ri-more-fill align-middle" />
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                              <li>
                                <a
                                  href={`/api/database/download/${database.id}`}
                                  class="dropdown-item"
                                >
                                  <i class="ri-download-fill align-bottom me-2 text-muted" />{" "}
                                  Download
                                </a>
                              </li>
                              <li>
                                <a
                                  class="dropdown-item remove-item-btn"
                                  data-id={database.id}
                                >
                                  <i class="ri-delete-bin-fill align-bottom me-2 text-muted" />{" "}
                                  Delete
                                </a>
                              </li>
                            </ul>
                          </div>
                        </td>
                      </tr>
                    ))
                }
              </tbody>
            </table>
          </div>
        </div>
      </div><!--end col-->
    </div><!--end row-->
  </div>
  <!-- container-fluid -->
</AdminLayout>
